using iTextSharp.text;
using iTextSharp.text.pdf;

namespace DPS.Encryption
{
    public class PdfPageEvents : PdfPageEventHelper
    {
        private string _generatedBy;
        private Font _footerFont;

        public PdfPageEvents(string generatedBy)
        {
            _generatedBy = generatedBy;
            _footerFont = FontFactory.GetFont(FontFactory.HELVETICA, 10);
        }

        public override void OnEndPage(PdfWriter writer, Document document)
        {
            // Add page number
            int pageNumber = writer.PageNumber;
            PdfPTable footer = new PdfPTable(2);
            footer.TotalWidth = document.PageSize.Width - document.LeftMargin - document.RightMargin;

            // Create a cell for page number
            PdfPCell pageNumberCell = new PdfPCell(new Phrase($"Page {pageNumber}", _footerFont))
            {
                Border = Rectangle.NO_BORDER,
                HorizontalAlignment = Element.ALIGN_RIGHT,
                Padding = 5
            };

            // Create a cell for generated by information
            PdfPCell generatedByCell = new PdfPCell(new Phrase($"Generated by: {_generatedBy}", _footerFont))
            {
                Border = Rectangle.NO_BORDER,
                HorizontalAlignment = Element.ALIGN_LEFT,
                Padding = 5
            };

            footer.AddCell(generatedByCell);
            footer.AddCell(pageNumberCell);
            footer.WriteSelectedRows(0, -1, document.LeftMargin, document.BottomMargin, writer.DirectContent);
        }
    }
}